[project]
name = "example"
version = "0.1.0"
description = "This is an example project template for Django."
authors = [
    {name = "Leland E. Vakarian"},
]
readme = "readme.md"
requires-python = ">=3.10"
classifiers = ["Private :: Do Not Upload"]

dependencies = [
    "Django >= 4.2.2, < 5",
    "django-environ >= 0.10.0, < 1",
]

[project.optional-dependencies]
dev = [
    # we'll accept the latest version of ruff, whatever it is
    "ruff",
    "pytest >= 7.3.2, < 8",
]

[project.urls]
Repository = "https://github.com/Zoidmania/baka"

[tool.setuptools]
# Django projects are collections of multiple top-level Python modules, which breaks setuptools when
# it attempts to auto-discover the modules it should parse.
py-modules = []

[tool.ruff]
# I like [Google's Python Style Guide](https://google.github.io/styleguide/pyguide.html), so I've
# configured `ruff` to lint in that manner (albeit a little looser than Google's rules).
# See https://beta.ruff.rs/docs/rules for rule definitions
select = ["F", "E", "W", "I", "N", "D", "DJ", "PT", "PL", "RUF", "BLE", "B", "T20"]
ignore = [
    "D100", # Not everything needs a module-level docstring.
    "D101", # Not every class needs a docstring. Django has many boilerplate classes.
    "D105", # Magic methods don't generally need docstrings; they're self-explanatory.
    "D202", # Allow blank lines after function docstrings. Leland likes 1 if not an import.
    "D203", # Mutually exclusive with D211, we don't want blank lines before class docstrings.
    # Mutually exclusive with D212, we want Multi-line docstring summary starting at the first line.
    "D213",
    # We prefer descriptive style, not imperative. See https://stackoverflow.com/a/59902236/2610790.
    "D401",

    # Default __str__ on Django models is fine; don't need to define a custom one every time.
    "DJ008",

    "I001", # We necessitate import certain modules after others due to how Django's models behave.

    "PLW0602", # Leland uses `global VAR` without assignment to denote that the global exists.
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__init__.py", # we don't have anything in any of our inits
    "*migrations/*", # skip Django migrations
    "*templates/*", # skip anything in Django template dirs
    "deploy/*" # not Python
]

respect-gitignore = true
show-fixes = true

# Leland's style allows for wider lines
line-length = 100

# Minimum Python 3.10.
target-version = "py310"

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Group messages by offending file
format = "grouped"

[tool.ruff.pydocstyle]
# Use Google-style docstrings
convention = "google"

[tool.ruff.per-file-ignores]
"admin.py" = [
    "F403", # We typically import all model classes with * in these files.
    "F405", # We typically import all model classes with * in these files.
]
"models.py" = [
    # It's _extremely common_ to have Meta classes on Django models. They don't need docstrings.
    "D106",
]
"tests/factories.py" = [
    # It's _extremely common_ to have Meta classes on Factory models. They don't need docstrings.
    "D106",
]
"tests/*" = [
    # Don't require docstrings for test cases; the name of the function should be sufficient.
    "D102",
    "D103",

    "PLR2004", # Allow magic values for comparisons in tests.
]
